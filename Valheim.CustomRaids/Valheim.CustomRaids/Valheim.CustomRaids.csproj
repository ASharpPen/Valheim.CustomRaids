<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net48</TargetFramework>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <AssemblyName>Valheim.CustomRaids</AssemblyName>
    <RootNamespace>Valheim.CustomRaids</RootNamespace>
    <Authors>A Sharp Pen</Authors>
    <Version>1.7.13</Version>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="assembly_utils">
      <HintPath>..\..\Libs\Valheim\assembly_utils.dll</HintPath>
    </Reference>
    <Reference Include="assembly_valheim">
      <HintPath>..\..\Libs\Valheim\assembly_valheim.dll</HintPath>
    </Reference>
    <Reference Include="CreatureLevelControl">
      <HintPath>..\..\Libs\Smoothbrain-CreatureLevelAndLootControl\CreatureLevelControl.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>..\..\Libs\Unity\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>..\..\Libs\Unity\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>..\..\Libs\Unity\UnityEngine.PhysicsModule.dll</HintPath>
    </Reference>
    <Reference Include="Valheim.SpawnThat">
      <HintPath>..\..\Libs\ASharpPen-Spawn_That\Valheim.SpawnThat.dll</HintPath>
    </Reference>
    <Reference Include="VentureValheim.Progression">
      <HintPath>..\..\Libs\VentureValheim-World_Advancement_Progression\VentureValheim.Progression.dll</HintPath>
    </Reference>
  </ItemGroup>

	<Target Name="PropagateVersionNumber" BeforeTargets="Build">

		<PropertyGroup>
			<RepoDir>$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine($(MSBuildProjectDirectory),'..','..'))))</RepoDir>
			<ThunderStoreDir>$([System.IO.Path]::Combine($(RepoDir),'Thunderstore'))</ThunderStoreDir>

			<Manifest>$([System.IO.Path]::Combine($(ThunderStoreDir),'manifest.json'))</Manifest>
			<PluginFile>$([System.IO.Path]::Combine($(MSBuildProjectDirectory),'CustomRaidPlugin.cs'))</PluginFile>
		</PropertyGroup>

		<Message Text="Replacing manifest version: $([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText($(Manifest))),'version_number&quot;.+')) with '$(Version)'" Importance="high" />

		<WriteLinesToFile File="$(Manifest)" Lines="$([System.Text.RegularExpressions.Regex]::Replace($([System.IO.File]::ReadAllText($(Manifest))),'version_number&quot;.+','version_number&quot;: &quot;$(Version)&quot;,'))" Overwrite="true" Encoding="UTF-8" />

		<Message Text="Replacing plugin version: $([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText($(PluginFile))),'Version\s?=\s?&quot;.+&quot;')) with '$(Version)'" Importance="high" />

		<WriteLinesToFile File="$(PluginFile)" Lines="$([System.Text.RegularExpressions.Regex]::Replace($([System.IO.File]::ReadAllText($(PluginFile))),'Version\s?=\s?&quot;.+&quot;','Version = &quot;$(Version)&quot;'))" Overwrite="true" Encoding="UTF-8" />

	</Target>

	<Target Name="PrepareReleaseArtifacts" AfterTargets="Build" Condition="'$(Configuration)'=='Release'">

		<PropertyGroup>
			<OutputNugetDir>$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine($(OutputDir),'..'))))</OutputNugetDir>
			<RepoDir>$([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine($(MSBuildProjectDirectory),'..','..'))))</RepoDir>
			<ThunderStoreDir>$([System.IO.Path]::Combine($(RepoDir),'Thunderstore'))</ThunderStoreDir>
			<ReleaseDir>$([System.IO.Path]::Combine($(ThunderstoreDir),'CustomRaids_v$(Version)'))</ReleaseDir>
			<BuildConfigurationDir>$([System.IO.Path]::Combine($(BaseOutputPath),$(Configuration)))</BuildConfigurationDir>

			<CustomRaidsDll>$(OutputPath)$(AssemblyName).dll</CustomRaidsDll>
			<Readme>$([System.IO.Path]::Combine($(RepoDir),'README.md'))</Readme>
			<Icon>$([System.IO.Path]::Combine($(ThunderStoreDir),'icon.png'))</Icon>
			<Manifest>$([System.IO.Path]::Combine($(ThunderStoreDir),'manifest.json'))</Manifest>
		</PropertyGroup>

		<Message Text="Preparing release '$(ReleaseDir)'" Importance="high" />

		<RemoveDir Directories="$(ReleaseDir)" />
		<MakeDir Directories="$(ReleaseDir)" />

		<Copy SourceFiles="$(CustomRaidsDll);$(Readme);$(Icon);$(Manifest)" DestinationFolder="$(ReleaseDir)" />

		<ZipDirectory SourceDirectory="$(ReleaseDir)" Overwrite="true" DestinationFile="$([System.IO.Path]::Combine($(ThunderStoreDir),'CustomRaids_v$(Version).zip'))" />

		<Move SourceFiles="$([System.IO.Path]::Combine($(ThunderStoreDir),'CustomRaids_v$(Version).zip'))" DestinationFiles="$([System.IO.Path]::Combine($(ReleaseDir),'CustomRaids_v$(Version).zip'))" />
	</Target>
</Project>
